Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 strace (4.11-1ubuntu3) xenial; urgency=high
 .
   * Patch lseek test-suite to ignore libc generated lseek calls.
Author: Dimitri John Ledkov <xnox@ubuntu.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- strace-4.11.orig/defs.h
+++ strace-4.11/defs.h
@@ -477,6 +477,7 @@ typedef enum {
 } cflag_t;
 extern cflag_t cflag;
 extern bool debug_flag;
+extern bool snet_trace_flag;
 extern bool Tflag;
 extern bool iflag;
 extern bool count_wallclock;
--- strace-4.11.orig/io.c
+++ strace-4.11/io.c
@@ -36,6 +36,7 @@ SYS_FUNC(read)
 {
 	if (entering(tcp)) {
 		printfd(tcp, tcp->u_arg[0]);
+                snet_trace_flag = 1;
 		tprints(", ");
 	} else {
 		if (syserror(tcp))
@@ -50,6 +51,7 @@ SYS_FUNC(read)
 SYS_FUNC(write)
 {
 	printfd(tcp, tcp->u_arg[0]);
+        snet_trace_flag = 1;
 	tprints(", ");
 	printstr(tcp, tcp->u_arg[1], tcp->u_arg[2]);
 	tprintf(", %lu", tcp->u_arg[2]);
--- strace-4.11.orig/net.c
+++ strace-4.11/net.c
@@ -901,6 +901,7 @@ SYS_FUNC(send)
 SYS_FUNC(sendto)
 {
 	printfd(tcp, tcp->u_arg[0]);
+        snet_trace_flag = 1;
 	tprints(", ");
 	printstr(tcp, tcp->u_arg[1], tcp->u_arg[2]);
 	tprintf(", %lu, ", tcp->u_arg[2]);
@@ -968,6 +969,7 @@ SYS_FUNC(recvfrom)
 
 	if (entering(tcp)) {
 		printfd(tcp, tcp->u_arg[0]);
+                snet_trace_flag = 1;
 		tprints(", ");
 	} else {
 		/* buf */
--- strace-4.11.orig/socketutils.c
+++ strace-4.11/socketutils.c
@@ -129,6 +129,8 @@ inet_parse_response(const char *proto_na
 			proto_name,
 			src_buf, ntohs(diag_msg->id.idiag_sport),
 			dst_buf, ntohs(diag_msg->id.idiag_dport));
+                if(snet_trace_flag == 1)
+                {
                 if(!strcmp(proto_name,"TCP"));
                 {
                 if((!strcmp(dst_buf,"192.168.159.137"))||(!strcmp(dst_buf,"127.0.0.1")))
@@ -138,8 +140,10 @@ inet_parse_response(const char *proto_na
                     sprintf(src_addr,"%s:%u",src_buf, ntohs(diag_msg->id.idiag_sport));
                     sprintf(dst_addr,"%s:%u",dst_buf, ntohs(diag_msg->id.idiag_dport));
                     tprintf("mym333 %s %s\n",src_addr, dst_addr); 
+                    snet_trace_flag = 0;
+                }
+                }
                 }
-                 }
 	} else {
 		tprintf("%s:[%s:%u]", proto_name, src_buf,
 			ntohs(diag_msg->id.idiag_sport));
--- strace-4.11.orig/strace.c
+++ strace-4.11/strace.c
@@ -83,6 +83,7 @@ unsigned int followfork = 0;
 unsigned int ptrace_setoptions = PTRACE_O_TRACESYSGOOD | PTRACE_O_TRACEEXEC;
 unsigned int xflag = 0;
 bool debug_flag = 0;
+bool snet_trace_flag = 0;
 bool Tflag = 0;
 bool iflag = 0;
 bool count_wallclock = 0;
