Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 strace (4.11-1ubuntu3) xenial; urgency=high
 .
   * Patch lseek test-suite to ignore libc generated lseek calls.
Author: Dimitri John Ledkov <xnox@ubuntu.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- strace-4.11.orig/defs.h
+++ strace-4.11/defs.h
@@ -479,6 +479,9 @@ extern cflag_t cflag;
 extern bool debug_flag;
 extern struct tcb *current_tcp;
 extern bool snet_trace_flag;
+extern char  local_src_addr[100];
+extern char *local_ip_addr[10];
+extern int  local_ip_addr_size;
 extern bool Tflag;
 extern bool iflag;
 extern bool count_wallclock;
--- strace-4.11.orig/strace.c
+++ strace-4.11/strace.c
@@ -84,6 +84,7 @@ unsigned int ptrace_setoptions = PTRACE_
 unsigned int xflag = 0;
 bool debug_flag = 0;
 bool snet_trace_flag = 0;
+int  local_ip_addr_size=0;
 bool Tflag = 0;
 bool iflag = 0;
 bool count_wallclock = 0;
@@ -1490,6 +1491,32 @@ init(int argc, char *argv[])
 	for (tcbi = 0; tcbi < tcbtabsize; tcbi++)
 		tcbtab[tcbi] = tcp++;
 
+    struct ifaddrs * ifAddrStruct=NULL;
+    void * tmpAddrPtr=NULL;
+    char * addressBuffer=NULL;
+    int local_ip_addr_index=0;
+    getifaddrs(&ifAddrStruct);
+
+    while (ifAddrStruct!=NULL) {
+        if (ifAddrStruct->ifa_addr->sa_family==AF_INET) { // check it is IP4
+            // is a valid IP4 Address
+            tmpAddrPtr=&((struct sockaddr_in *)ifAddrStruct->ifa_addr)->sin_addr;
+            //char addressBuffer[INET_ADDRSTRLEN];
+            addressBuffer=(char *) calloc(1,INET_ADDRSTRLEN);
+            inet_ntop(AF_INET, tmpAddrPtr, addressBuffer, INET_ADDRSTRLEN);
+            local_ip_addr[local_ip_addr_index]=addressBuffer;
+            local_ip_addr_index++;
+            local_ip_addr_size++;
+            printf("%s IP Address %s\n", ifAddrStruct->ifa_name, addressBuffer);
+            }
+        ifAddrStruct=ifAddrStruct->ifa_next;
+    }
+    for(local_ip_addr_index=0; local_ip_addr_index<local_ip_addr_size;local_ip_addr_index++)
+     {
+     printf("IP Address %s\n", local_ip_addr[local_ip_addr_index]);
+
+     }
+
 	shared_log = stderr;
 	set_sortby(DEFAULT_SORTBY);
 	set_personality(DEFAULT_PERSONALITY);
