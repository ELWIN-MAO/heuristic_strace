Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 strace (4.11-1ubuntu3) xenial; urgency=high
 .
   * Patch lseek test-suite to ignore libc generated lseek calls.
Author: Dimitri John Ledkov <xnox@ubuntu.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- strace-4.11.orig/clone.c
+++ strace-4.11/clone.c
@@ -80,7 +80,7 @@ extern void print_user_desc(struct tcb *
 SYS_FUNC(clone)
 {
 
-tprintf("mym=%d\n",exiting(tcp));
+tprintf("\nmym_sys_clone_enter=%d\n",exiting(tcp));
 
 
 	if (exiting(tcp)) {
--- strace-4.11.orig/socketutils.c
+++ strace-4.11/socketutils.c
@@ -108,8 +108,7 @@ void socket_to_pid(char* asrc_addr,char*
     {
         strcat(result,buff);
     }
-    tprintf("socket_to_pid result:");
-    tprintf("%s",result);
+    tprintf("\nsocket_to_pid result: %s\n",result);
     pclose(fstream);
 }
 
@@ -183,7 +182,7 @@ inet_parse_response(const char *proto_na
                     char dst_addr[100];
                     sprintf(src_addr,"%s:%u",src_buf, ntohs(diag_msg->id.idiag_sport));
                     sprintf(dst_addr,"%s:%u",dst_buf, ntohs(diag_msg->id.idiag_dport));
-                    tprintf("mym333 %s %s\n",src_addr, dst_addr); 
+                    tprintf("\nmym_socket_commu %s %s\n",src_addr, dst_addr); 
                     socket_to_pid(dst_addr,src_addr); 
                     //snet_trace_flag = 0;
                 }
--- strace-4.11.orig/strace.c
+++ strace-4.11/strace.c
@@ -2155,7 +2155,7 @@ trace(void)
 		print_debug_info(pid, status);
 
 	/* Look up 'pid' in our table. */
-        tprintf("mymwait=%d\n", pid);
+        tprintf("\nmym_waitpid=%d\n", pid);
 	tcp = pid2tcb(pid);
 
 	if (!tcp) {
--- strace-4.11.orig/syscall.c
+++ strace-4.11/syscall.c
@@ -798,7 +798,7 @@ trace_syscall_entering(struct tcb *tcp)
 		return res;
 	if (res == 1)
 		res = get_syscall_args(tcp);
-        tprintf("mymno=%ld\n", (tcp->scno));
+        tprintf("\nmym_scno=%ld\n", (tcp->scno));
 
 	if (res != 1) {
 		printleader(tcp);
@@ -969,7 +969,7 @@ trace_syscall_exiting(struct tcb *tcp)
 		else
 			sys_res = tcp->s_ent->sys_func(tcp);
 	}
-        tprintf("mym3m%#lx", tcp->u_rval);
+        tprintf("\nmym_scall_rval=%#lx\n", tcp->u_rval);
 	tprints(") ");
 	tabto();
 	u_error = tcp->u_error;
